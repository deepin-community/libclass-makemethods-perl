Description: fix POD/man issues
Bug: https://rt.cpan.org/Ticket/Display?id=94937
Forwarded: https://rt.cpan.org/Ticket/Display?id=94937 (not last version)
Author: gregor herrmann <gregoa@debian.org>
Last-Update: 2016-06-10

--- a/MakeMethods/Docs/RelatedModules.pod
+++ b/MakeMethods/Docs/RelatedModules.pod
@@ -482,6 +482,8 @@
 
 =head2 Class::Hook
 
+=over 4
+
 =item Distribution
 
 CPAN. Uploaded 12/01.
@@ -490,6 +492,7 @@
 
 I have not yet reviewed this module in detail.
 
+=back
 
 =head2 Class::Holon
 
--- a/MakeMethods/Template/Generic.pm
+++ b/MakeMethods/Template/Generic.pm
@@ -897,6 +897,7 @@
 =item set_false
 
 Sets the value to zero.
+
 =back
 
 =cut
--- a/MakeMethods/Template/StructBuiltin.pm
+++ b/MakeMethods/Template/StructBuiltin.pm
@@ -9,7 +9,7 @@
 
 =head1 NAME
 
-Class::MakeMethods::Template::StructBuiltin
+Class::MakeMethods::Template::StructBuiltin - generates a wrapper around some builtin function
 
 =head1 SYNOPSIS
 
--- a/MakeMethods/Attribute.pm
+++ b/MakeMethods/Attribute.pm
@@ -136,7 +136,7 @@
 
 =head1 SEE ALSO
 
-See L<Attribute::Handlers> by Damian Conway.
+See L<Attribute::Handlers> by Damian Conway.
 
 See L<Class::MakeMethods> for general information about this distribution. 
 
--- a/MakeMethods/Composite/Inheritable.pm
+++ b/MakeMethods/Composite/Inheritable.pm
@@ -46,7 +46,7 @@
 
 The MakeMethods subclass provides accessor methods that search an inheritance tree to find a value. This allows you to set a shared or default value for a given class, optionally override it in a subclass, and then optionally override it on a per-instance basis. 
 
-Note that all MakeMethods methods are inheritable, in the sense that they work as expected for subclasses. These methods are different in that the I<data> accessed by each method can be inherited or overridden in each subclass or instance. See L< Class::MakeMethods::Utility::Inheritable> for more about this type of "inheritable" or overridable" data.
+Note that all MakeMethods methods are inheritable, in the sense that they work as expected for subclasses. These methods are different in that the I<data> accessed by each method can be inherited or overridden in each subclass or instance. See L<Class::MakeMethods::Utility::Inheritable> for more about this type of "inheritable" or overridable" data.
 
 
 =head2 Class::MakeMethods Calling Interface
--- a/MakeMethods/Docs/ReadMe.pod
+++ b/MakeMethods/Docs/ReadMe.pod
@@ -1,3 +1,5 @@
+=encoding utf-8
+
 =head1 NAME
 
 Class::MakeMethods::Docs::ReadMe - About Class::MakeMethods 
@@ -266,7 +268,7 @@
 
 Class::MakeMethods::Emulator::Inheritable is based on Class::Data::Inheritable. Portions Copyright 2000 Damian Conway and Michael G Schwern.
 
-Class::MakeMethods::Emulator::mcoder is based on mcoder. Portions Copyright 2003 by Salvador FandiÒo.
+Class::MakeMethods::Emulator::mcoder is based on mcoder. Portions Copyright 2003 by Salvador Fandi√±o.
 
 Class::MakeMethods::Emulator::Singleton is based on Class::Singleton, by Andy Wardley. Portions Copyright 1998 Canon Research Centre Europe Ltd. 
 
--- a/MakeMethods/Emulator/mcoder.pm
+++ b/MakeMethods/Emulator/mcoder.pm
@@ -111,6 +111,6 @@
 
 See L<Class::MakeMethods::Emulator> for more about this family of subclasses.
 
-See L< mcoder> for documentation of the original module.
+See L<mcoder> for documentation of the original module.
 
 =cut
--- a/MakeMethods/Standard/Inheritable.pm
+++ b/MakeMethods/Standard/Inheritable.pm
@@ -46,7 +46,7 @@
 
 The MakeMethods subclass provides accessor methods that search an inheritance tree to find a value. This allows you to set a shared or default value for a given class, optionally override it in a subclass, and then optionally override it on a per-instance basis. 
 
-Note that all MakeMethods methods are inheritable, in the sense that they work as expected for subclasses. These methods are different in that the I<data> accessed by each method can be inherited or overridden in each subclass or instance. See L< Class::MakeMethods::Utility::Inheritable> for more about this type of "inheritable" or overridable" data.
+Note that all MakeMethods methods are inheritable, in the sense that they work as expected for subclasses. These methods are different in that the I<data> accessed by each method can be inherited or overridden in each subclass or instance. See L<Class::MakeMethods::Utility::Inheritable> for more about this type of "inheritable" or overridable" data.
 
 
 =head2 Calling Conventions
